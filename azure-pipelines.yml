trigger:
  - master
  - next

jobs:
  - job: "Build_And_Test"
    strategy:
      matrix:
        x64_Windows:
          vmImage: windows-latest
          CMAKE_OTHER_ARGS:
          CTEST_OTHER_ARGS:
        x86_Windows:
          vmImage: windows-latest
          CMAKE_OTHER_ARGS: -T host=x64 -A win32
          CTEST_OTHER_ARGS: -E Promise.awaitThenReject
        x64_Linux:
          vmImage: ubuntu-latest
          CMAKE_OTHER_ARGS:
          CTEST_OTHER_ARGS:
        x64_MacOS:
          vmImage: macOS-latest
          CMAKE_OTHER_ARGS:
          CTEST_OTHER_ARGS:
    pool:
      vmImage: $(vmImage)

    steps:
      - task: CMake@1
        inputs:
          workingDirectory: "$(Build.SourcesDirectory)/build"
          cmakeArgs: "$(Build.SourcesDirectory) -DCMAKE_BUILD_TYPE=Release $(CMAKE_OTHER_ARGS)"
        displayName: "CMake Configure and Generate"

      - script: |
          cmake --build $(Build.SourcesDirectory)/build -j8
        displayName: "Build"

      - script: |
          cd $(Build.SourcesDirectory)/build && ctest --output-on-failure $(CTEST_OTHER_ARGS)
        displayName: "Test"

  - job: "Build_And_Test_QEMU"
    strategy:
      matrix:
        AArch64_Linux:
          vmImage: ubuntu-latest
          APT_INSTALL_PKG: gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-arm64-cross qemu-user
          CMAKE_SYSTEM_NAME: Linux
          CMAKE_SYSTEM_PROCESSOR: aarch64
          CMAKE_C_COMPILER: aarch64-linux-gnu-gcc
          CMAKE_CXX_COMPILER: aarch64-linux-gnu-g++
          CMAKE_CROSSCOMPILING_EMULATOR: qemu-aarch64;-L;/usr/aarch64-linux-gnu/
          CMAKE_OTHER_ARGS:
        MIPS64_Linux:
          vmImage: ubuntu-18.04
          APT_INSTALL_PKG: gcc-mips64-linux-gnuabi64 g++-mips64-linux-gnuabi64 libc6-mips64-cross qemu-user
          CMAKE_SYSTEM_NAME: Linux
          CMAKE_SYSTEM_PROCESSOR: mips64
          CMAKE_C_COMPILER: mips64-linux-gnuabi64-gcc
          CMAKE_CXX_COMPILER: mips64-linux-gnuabi64-g++
          CMAKE_CROSSCOMPILING_EMULATOR: qemu-mips64;-L;/usr/mips64-linux-gnuabi64/
          CMAKE_OTHER_ARGS:
        RISCV64_Linux:
          vmImage: ubuntu-latest
          APT_INSTALL_PKG: gcc-riscv64-linux-gnu g++-riscv64-linux-gnu libc6-riscv64-cross qemu-user
          CMAKE_SYSTEM_NAME: Linux
          CMAKE_SYSTEM_PROCESSOR: riscv64
          CMAKE_C_COMPILER: riscv64-linux-gnu-gcc
          CMAKE_CXX_COMPILER: riscv64-linux-gnu-g++
          CMAKE_CROSSCOMPILING_EMULATOR: qemu-riscv64;-L;/usr/riscv64-linux-gnu/
          CMAKE_OTHER_ARGS:
        x86_Linux:
          vmImage: ubuntu-latest
          APT_INSTALL_PKG: libc6-dev-i386 g++-multilib qemu-user
          CMAKE_SYSTEM_NAME: Linux
          CMAKE_SYSTEM_PROCESSOR: i386
          CMAKE_C_COMPILER: gcc
          CMAKE_CXX_COMPILER: g++
          CMAKE_CROSSCOMPILING_EMULATOR: qemu-i386
          CMAKE_OTHER_ARGS: -DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32 -DCMAKE_ASM_FLAGS=-m32
    pool:
      vmImage: $(vmImage)

    steps:
      - script: |
          sudo apt update
          sudo apt install $(APT_INSTALL_PKG)
        displayName: "Install dependence"

      - task: CMake@1
        inputs:
          workingDirectory: "$(Build.SourcesDirectory)/build"
          cmakeArgs: "$(Build.SourcesDirectory) -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=$(CMAKE_SYSTEM_NAME) -DCMAKE_SYSTEM_PROCESSOR=$(CMAKE_SYSTEM_PROCESSOR) -DCMAKE_C_COMPILER=$(CMAKE_C_COMPILER) -DCMAKE_CXX_COMPILER=$(CMAKE_CXX_COMPILER) -DCMAKE_CROSSCOMPILING_EMULATOR=$(CMAKE_CROSSCOMPILING_EMULATOR) $(CMAKE_OTHER_ARGS)"
        displayName: "CMake Configure and Generate"

      - script: |
          cmake --build $(Build.SourcesDirectory)/build -j8
        displayName: "Build"

      - script: |
          cd $(Build.SourcesDirectory)/build && ctest --output-on-failure
        displayName: "Test"
